// Prob8.cpp : This file contains the 'main' function. Program execution begins and ends there.
//

#include "pch.h"
#include <iostream>


#include "pch.h"
#include <iostream>
constexpr auto chunk = 13;
int main()
{
	char S[] = "7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450";

	unsigned long long product = 1, lp = 1;
	int i, j, startindex = 0;

	for (i = 0; i <= (1000 - chunk); i++)
	{
		product = 1;
		for (j = 0; product > 0 && j < chunk; j++)
			product *= (S[i + j] - 48);
		if (product > lp)
		{
			lp = product;
			startindex = i;
		}
	}
	printf("\n-->%lld", lp);
	printf("\n-->%d", startindex);
	printf("\n", startindex);
	for (j = 0; j < chunk; j++)
	printf("%c", S[startindex + j]);
}

/*
	char S[20][51] = { "73167176531330624919225119674426574742355349194934","96983520312774506326239578318016984801869478851843"
		,"85861560789112949495459501737958331952853208805511","12540698747158523863050715693290963295227443043557"
		,"66896648950445244523161731856403098711121722383113","62229893423380308135336276614282806444486645238749"
		,"30358907296290491560440772390713810515859307960866","70172427121883998797908792274921901699720888093776"
		,"65727333001053367881220235421809751254540594752243","52584907711670556013604839586446706324415722155397"
		,"53697817977846174064955149290862569321978468622482","83972241375657056057490261407972968652414535100474"
		,"82166370484403199890008895243450658541227588666881","16427171479924442928230863465674813919123162824586"
		,"17866458359124566529476545682848912883142607690042","24219022671055626321111109370544217506941658960408"
		,"07198403850962455444362981230987879927244284909188","84580156166097919133875499200524063689912560717606"
		,"05886116467109405077541002256983155200055935729725","71636269561882670428252483600823257530420752963450" };
	unsigned long long int product = 1, lp = 1;
	int i,j,k, startindex1 = 0, startindex2 = 0;
	for (k = 0; k< 20; k++)
		for (i = 0; i <= (50 - chunk); i++)
		{
			product = 1;
			for (j = 0; j < chunk; j++)
			{
				product *= S[k][i + j] - 48;
			}
			if (lp < product)
			{
				lp = product;
				startindex1 = k;
				startindex2 = i;
			}
		}
	printf("\n-->%lld", lp);
	printf("\n-->[%d][%d] ", startindex1,startindex2);
	printf("\n");
	for (j = 0; j < chunk; j++)
		printf("%c", S[startindex1][startindex2 + j]);
*/

/*
	char S[] = "7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450";

	float product = 1, lp = 1;
	int i,j, startindex = 0;

	for (i = 0; i <= (1000 - chunk); i++)
	{
		product = 1;
		for (j = 0; (S[i + j] - 48 > 0) &&  j < chunk; j++)
			product *= S[i+ j] - 48;
		if (product > lp)
		{
			lp = product;
			startindex = i;
		}
	}
	printf("\n-->%d", lp);
	printf("\n-->%d", startindex);
	printf("\n", startindex);
	for (j = 0; j < chunk; j++)
		printf("%c", S[startindex + j]);
*/

// Run program: Ctrl + F5 or Debug > Start Without Debugging menu
// Debug program: F5 or Debug > Start Debugging menu

// Tips for Getting Started: 
//   1. Use the Solution Explorer window to add/manage files
//   2. Use the Team Explorer window to connect to source control
//   3. Use the Output window to see build output and other messages
//   4. Use the Error List window to view errors
//   5. Go to Project > Add New Item to create new code files, or Project > Add Existing Item to add existing code files to the project
//   6. In the future, to open this project again, go to File > Open > Project and select the .sln file
